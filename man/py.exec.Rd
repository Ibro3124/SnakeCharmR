% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/py.exec.R
\name{py.exec}
\alias{py.exec}
\title{Executes Python code contained in an R character vector.}
\usage{
py.exec(code, stopOnException = TRUE)
}
\arguments{
\item{code}{a character vector containing Python code, typically a
single line with indentation and EOL characters as required by Python syntax}

\item{stopOnException}{logical value indicating whether to check or not for exceptions in Python}
}
\value{
None.  If the code produces some output, it is up to the caller to
go and fetch if from Python.
}
\description{
This function runs Python code.  It needs to be provided by the caller in a
character vector.
}
\details{
The vector may consists of a single string with EOL and indentation
characters embedded.

Alternatively, it can be a character vector, each entry containing one or
more lines of Python code.

The \code{get.exception} option allows the user to disregard Python
exceptions in cases where safe calls to avoid the overhead of checking for
them.
}
\examples{
a <- 1:4
b <- 5:8
py.exec( c( "def concat(a,b):", "\\treturn a+b" ) )
py.call( "concat", a, b)
}
\keyword{manip}

